cbbf6e2625dcfd1a813c9731140d3a92
"use strict";

exports.__esModule = true;

var MissingNumberLogic_1 = require("../MissingNumberLogic");

var defaultItems = 5;
var correctInput = [2, 3, 1, 0, 5];
describe('logic/MissingNumber', function () {
  it('can add numbers to debug', function () {
    expect(MissingNumberLogic_1["default"].addSomeUniqueNumbers(2).length).toEqual(2);
  });
  it('should not validate the box items size', function () {
    expect(MissingNumberLogic_1["default"].validateSizeBox('e')).toBeFalsy();
    expect(MissingNumberLogic_1["default"].validateSizeBox(-1)).toBeFalsy();
    expect(MissingNumberLogic_1["default"].validateSizeBox(11)).toBeFalsy();
  });
  it('should validate the box items size', function () {
    expect(MissingNumberLogic_1["default"].validateSizeBox(1)).toBeTruthy();
  });
  it('should not validate the items', function () {
    expect(MissingNumberLogic_1["default"].validateBoxNumbers(-1, defaultItems)).toBeFalsy();
    expect(MissingNumberLogic_1["default"].validateBoxNumbers([], defaultItems)).toBeFalsy();
    expect(MissingNumberLogic_1["default"].validateBoxNumbers(['1', 'sdsd'], defaultItems)).toBeFalsy();
    expect(MissingNumberLogic_1["default"].validateBoxNumbers(['1', ''], defaultItems)).toBeFalsy();
    expect(MissingNumberLogic_1["default"].validateBoxNumbers(['1', '0', '2', '3'], defaultItems)).toBeFalsy();
    expect(MissingNumberLogic_1["default"].validateBoxNumbers(['1', '0', '0', '3'], defaultItems)).toBeFalsy();
  });
  it('should validate the items', function () {
    expect(MissingNumberLogic_1["default"].validateBoxNumbers(correctInput.map(String), defaultItems)).toBeTruthy();
  });
  it('can not find the missing number', function () {
    expect(MissingNumberLogic_1["default"].findMissingNumber('1')).toEqual(-1);
  });
  it('find the missing number', function () {
    expect(MissingNumberLogic_1["default"].findMissingNumber(correctInput)).toEqual(4);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1pc3NpbmdOdW1iZXJMb2dpYy5qcyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsIk1pc3NpbmdOdW1iZXJMb2dpY18xIiwicmVxdWlyZSIsImRlZmF1bHRJdGVtcyIsImNvcnJlY3RJbnB1dCIsImRlc2NyaWJlIiwiaXQiLCJleHBlY3QiLCJhZGRTb21lVW5pcXVlTnVtYmVycyIsImxlbmd0aCIsInRvRXF1YWwiLCJ2YWxpZGF0ZVNpemVCb3giLCJ0b0JlRmFsc3kiLCJ0b0JlVHJ1dGh5IiwidmFsaWRhdGVCb3hOdW1iZXJzIiwibWFwIiwiU3RyaW5nIiwiZmluZE1pc3NpbmdOdW1iZXIiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxPQUFPLENBQUNDLFVBQVIsR0FBcUIsSUFBckI7O0FBQ0EsSUFBSUMsb0JBQW9CLEdBQUdDLE9BQU8sQ0FBQyx1QkFBRCxDQUFsQzs7QUFDQSxJQUFJQyxZQUFZLEdBQUcsQ0FBbkI7QUFDQSxJQUFJQyxZQUFZLEdBQUcsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixDQUFuQjtBQUNBQyxRQUFRLENBQUMscUJBQUQsRUFBd0IsWUFBWTtBQUN4Q0MsRUFBQUEsRUFBRSxDQUFDLDBCQUFELEVBQTZCLFlBQVk7QUFDdkNDLElBQUFBLE1BQU0sQ0FBQ04sb0JBQW9CLENBQUMsU0FBRCxDQUFwQixDQUFnQ08sb0JBQWhDLENBQXFELENBQXJELEVBQXdEQyxNQUF6RCxDQUFOLENBQXVFQyxPQUF2RSxDQUErRSxDQUEvRTtBQUNILEdBRkMsQ0FBRjtBQUdBSixFQUFBQSxFQUFFLENBQUMsd0NBQUQsRUFBMkMsWUFBWTtBQUNyREMsSUFBQUEsTUFBTSxDQUFDTixvQkFBb0IsQ0FBQyxTQUFELENBQXBCLENBQWdDVSxlQUFoQyxDQUFnRCxHQUFoRCxDQUFELENBQU4sQ0FBNkRDLFNBQTdEO0FBQ0FMLElBQUFBLE1BQU0sQ0FBQ04sb0JBQW9CLENBQUMsU0FBRCxDQUFwQixDQUFnQ1UsZUFBaEMsQ0FBZ0QsQ0FBQyxDQUFqRCxDQUFELENBQU4sQ0FBNERDLFNBQTVEO0FBQ0FMLElBQUFBLE1BQU0sQ0FBQ04sb0JBQW9CLENBQUMsU0FBRCxDQUFwQixDQUFnQ1UsZUFBaEMsQ0FBZ0QsRUFBaEQsQ0FBRCxDQUFOLENBQTREQyxTQUE1RDtBQUNILEdBSkMsQ0FBRjtBQUtBTixFQUFBQSxFQUFFLENBQUMsb0NBQUQsRUFBdUMsWUFBWTtBQUNqREMsSUFBQUEsTUFBTSxDQUFDTixvQkFBb0IsQ0FBQyxTQUFELENBQXBCLENBQWdDVSxlQUFoQyxDQUFnRCxDQUFoRCxDQUFELENBQU4sQ0FBMkRFLFVBQTNEO0FBQ0gsR0FGQyxDQUFGO0FBR0FQLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFrQyxZQUFZO0FBQzVDQyxJQUFBQSxNQUFNLENBQUNOLG9CQUFvQixDQUFDLFNBQUQsQ0FBcEIsQ0FBZ0NhLGtCQUFoQyxDQUFtRCxDQUFDLENBQXBELEVBQXVEWCxZQUF2RCxDQUFELENBQU4sQ0FBNkVTLFNBQTdFO0FBQ0FMLElBQUFBLE1BQU0sQ0FBQ04sb0JBQW9CLENBQUMsU0FBRCxDQUFwQixDQUFnQ2Esa0JBQWhDLENBQW1ELEVBQW5ELEVBQXVEWCxZQUF2RCxDQUFELENBQU4sQ0FBNkVTLFNBQTdFO0FBQ0FMLElBQUFBLE1BQU0sQ0FBQ04sb0JBQW9CLENBQUMsU0FBRCxDQUFwQixDQUFnQ2Esa0JBQWhDLENBQW1ELENBQUMsR0FBRCxFQUFNLE1BQU4sQ0FBbkQsRUFBa0VYLFlBQWxFLENBQUQsQ0FBTixDQUF3RlMsU0FBeEY7QUFDQUwsSUFBQUEsTUFBTSxDQUFDTixvQkFBb0IsQ0FBQyxTQUFELENBQXBCLENBQWdDYSxrQkFBaEMsQ0FBbUQsQ0FBQyxHQUFELEVBQU0sRUFBTixDQUFuRCxFQUE4RFgsWUFBOUQsQ0FBRCxDQUFOLENBQW9GUyxTQUFwRjtBQUNBTCxJQUFBQSxNQUFNLENBQUNOLG9CQUFvQixDQUFDLFNBQUQsQ0FBcEIsQ0FBZ0NhLGtCQUFoQyxDQUFtRCxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxFQUFnQixHQUFoQixDQUFuRCxFQUF5RVgsWUFBekUsQ0FBRCxDQUFOLENBQStGUyxTQUEvRjtBQUNBTCxJQUFBQSxNQUFNLENBQUNOLG9CQUFvQixDQUFDLFNBQUQsQ0FBcEIsQ0FBZ0NhLGtCQUFoQyxDQUFtRCxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxFQUFnQixHQUFoQixDQUFuRCxFQUF5RVgsWUFBekUsQ0FBRCxDQUFOLENBQStGUyxTQUEvRjtBQUNILEdBUEMsQ0FBRjtBQVFBTixFQUFBQSxFQUFFLENBQUMsMkJBQUQsRUFBOEIsWUFBWTtBQUN4Q0MsSUFBQUEsTUFBTSxDQUFDTixvQkFBb0IsQ0FBQyxTQUFELENBQXBCLENBQWdDYSxrQkFBaEMsQ0FBbURWLFlBQVksQ0FBQ1csR0FBYixDQUFpQkMsTUFBakIsQ0FBbkQsRUFBNkViLFlBQTdFLENBQUQsQ0FBTixDQUFtR1UsVUFBbkc7QUFDSCxHQUZDLENBQUY7QUFHQVAsRUFBQUEsRUFBRSxDQUFDLGlDQUFELEVBQW9DLFlBQVk7QUFDOUNDLElBQUFBLE1BQU0sQ0FBQ04sb0JBQW9CLENBQUMsU0FBRCxDQUFwQixDQUFnQ2dCLGlCQUFoQyxDQUFrRCxHQUFsRCxDQUFELENBQU4sQ0FBK0RQLE9BQS9ELENBQXVFLENBQUMsQ0FBeEU7QUFDSCxHQUZDLENBQUY7QUFHQUosRUFBQUEsRUFBRSxDQUFDLHlCQUFELEVBQTRCLFlBQVk7QUFDdENDLElBQUFBLE1BQU0sQ0FBQ04sb0JBQW9CLENBQUMsU0FBRCxDQUFwQixDQUFnQ2dCLGlCQUFoQyxDQUFrRGIsWUFBbEQsQ0FBRCxDQUFOLENBQXdFTSxPQUF4RSxDQUFnRixDQUFoRjtBQUNILEdBRkMsQ0FBRjtBQUdILENBN0JPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG52YXIgTWlzc2luZ051bWJlckxvZ2ljXzEgPSByZXF1aXJlKFwiLi4vTWlzc2luZ051bWJlckxvZ2ljXCIpO1xudmFyIGRlZmF1bHRJdGVtcyA9IDU7XG52YXIgY29ycmVjdElucHV0ID0gWzIsIDMsIDEsIDAsIDVdO1xuZGVzY3JpYmUoJ2xvZ2ljL01pc3NpbmdOdW1iZXInLCBmdW5jdGlvbiAoKSB7XG4gICAgaXQoJ2NhbiBhZGQgbnVtYmVycyB0byBkZWJ1ZycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZXhwZWN0KE1pc3NpbmdOdW1iZXJMb2dpY18xW1wiZGVmYXVsdFwiXS5hZGRTb21lVW5pcXVlTnVtYmVycygyKS5sZW5ndGgpLnRvRXF1YWwoMik7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCBub3QgdmFsaWRhdGUgdGhlIGJveCBpdGVtcyBzaXplJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBleHBlY3QoTWlzc2luZ051bWJlckxvZ2ljXzFbXCJkZWZhdWx0XCJdLnZhbGlkYXRlU2l6ZUJveCgnZScpKS50b0JlRmFsc3koKTtcbiAgICAgICAgZXhwZWN0KE1pc3NpbmdOdW1iZXJMb2dpY18xW1wiZGVmYXVsdFwiXS52YWxpZGF0ZVNpemVCb3goLTEpKS50b0JlRmFsc3koKTtcbiAgICAgICAgZXhwZWN0KE1pc3NpbmdOdW1iZXJMb2dpY18xW1wiZGVmYXVsdFwiXS52YWxpZGF0ZVNpemVCb3goMTEpKS50b0JlRmFsc3koKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIHZhbGlkYXRlIHRoZSBib3ggaXRlbXMgc2l6ZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZXhwZWN0KE1pc3NpbmdOdW1iZXJMb2dpY18xW1wiZGVmYXVsdFwiXS52YWxpZGF0ZVNpemVCb3goMSkpLnRvQmVUcnV0aHkoKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIG5vdCB2YWxpZGF0ZSB0aGUgaXRlbXMnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGV4cGVjdChNaXNzaW5nTnVtYmVyTG9naWNfMVtcImRlZmF1bHRcIl0udmFsaWRhdGVCb3hOdW1iZXJzKC0xLCBkZWZhdWx0SXRlbXMpKS50b0JlRmFsc3koKTtcbiAgICAgICAgZXhwZWN0KE1pc3NpbmdOdW1iZXJMb2dpY18xW1wiZGVmYXVsdFwiXS52YWxpZGF0ZUJveE51bWJlcnMoW10sIGRlZmF1bHRJdGVtcykpLnRvQmVGYWxzeSgpO1xuICAgICAgICBleHBlY3QoTWlzc2luZ051bWJlckxvZ2ljXzFbXCJkZWZhdWx0XCJdLnZhbGlkYXRlQm94TnVtYmVycyhbJzEnLCAnc2RzZCddLCBkZWZhdWx0SXRlbXMpKS50b0JlRmFsc3koKTtcbiAgICAgICAgZXhwZWN0KE1pc3NpbmdOdW1iZXJMb2dpY18xW1wiZGVmYXVsdFwiXS52YWxpZGF0ZUJveE51bWJlcnMoWycxJywgJyddLCBkZWZhdWx0SXRlbXMpKS50b0JlRmFsc3koKTtcbiAgICAgICAgZXhwZWN0KE1pc3NpbmdOdW1iZXJMb2dpY18xW1wiZGVmYXVsdFwiXS52YWxpZGF0ZUJveE51bWJlcnMoWycxJywgJzAnLCAnMicsICczJ10sIGRlZmF1bHRJdGVtcykpLnRvQmVGYWxzeSgpO1xuICAgICAgICBleHBlY3QoTWlzc2luZ051bWJlckxvZ2ljXzFbXCJkZWZhdWx0XCJdLnZhbGlkYXRlQm94TnVtYmVycyhbJzEnLCAnMCcsICcwJywgJzMnXSwgZGVmYXVsdEl0ZW1zKSkudG9CZUZhbHN5KCk7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCB2YWxpZGF0ZSB0aGUgaXRlbXMnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGV4cGVjdChNaXNzaW5nTnVtYmVyTG9naWNfMVtcImRlZmF1bHRcIl0udmFsaWRhdGVCb3hOdW1iZXJzKGNvcnJlY3RJbnB1dC5tYXAoU3RyaW5nKSwgZGVmYXVsdEl0ZW1zKSkudG9CZVRydXRoeSgpO1xuICAgIH0pO1xuICAgIGl0KCdjYW4gbm90IGZpbmQgdGhlIG1pc3NpbmcgbnVtYmVyJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBleHBlY3QoTWlzc2luZ051bWJlckxvZ2ljXzFbXCJkZWZhdWx0XCJdLmZpbmRNaXNzaW5nTnVtYmVyKCcxJykpLnRvRXF1YWwoLTEpO1xuICAgIH0pO1xuICAgIGl0KCdmaW5kIHRoZSBtaXNzaW5nIG51bWJlcicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZXhwZWN0KE1pc3NpbmdOdW1iZXJMb2dpY18xW1wiZGVmYXVsdFwiXS5maW5kTWlzc2luZ051bWJlcihjb3JyZWN0SW5wdXQpKS50b0VxdWFsKDQpO1xuICAgIH0pO1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NaXNzaW5nTnVtYmVyTG9naWMuanMubWFwIl19